{"version":3,"sources":["containers/Header.js","redux/constants/action-types.js","redux/actions/productActions.js","containers/ProductComponent.js","containers/ProductListing.js","containers/ProductDetail.js","App.js","redux/reducers/index.js","redux/reducers/productReducer.js","redux/store.js","index.js"],"names":["Header","to","className","ActionTypes","setProducts","products","type","payload","selectedProduct","product","ProductComponent","renderList","useSelector","state","allproducts","map","id","image","title","price","category","src","alt","ProductListing","dispatch","useDispatch","fetchProducts","api","a","axios","get","response","data","console","log","message","useEffect","ProductDetail","productId","useParams","description","fetchProductDetail","apiProduct","res","productDetail","Object","keys","length","href","tabIndex","App","path","exact","component","reducers","combineReducers","action","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAgBeA,EAbA,WACb,OACE,cAAC,IAAD,CAAMC,GAAG,eAAT,SACE,qBAAKC,UAAU,gBAAf,SACE,qBAAKA,UAAU,sBAAf,SACE,cAAC,IAAD,CAAMD,GAAG,eAAT,SACE,mD,iDCTCE,EACG,eADHA,EAEK,iBAFLA,EAGc,0BCDdC,EAAc,SAACC,GAAD,MAAe,CACxCC,KAAMH,EACNI,QAASF,IAGEG,EAAkB,SAACC,GAAD,MAAc,CAC3CH,KAAMH,EACNI,QAASE,ICsBIC,EA3BU,WACvB,IACMC,EADWC,aAAY,SAACC,GAAD,OAAWA,EAAMC,YAAYT,YAC9BU,KAAI,SAACN,GAC/B,IAAQO,EAAsCP,EAAtCO,GAAIC,EAAkCR,EAAlCQ,MAAOC,EAA2BT,EAA3BS,MAAOC,EAAoBV,EAApBU,MAAOC,EAAaX,EAAbW,SACjC,OACE,qBAAclB,UAAU,mBAAxB,SACE,cAAC,IAAD,CAAMD,GAAE,8BAAyBe,GAAjC,SACE,qBAAKd,UAAU,gBAAf,SACE,sBAAKA,UAAU,OAAf,UACE,qBAAKA,UAAU,QAAf,SACE,qBAAKmB,IAAKJ,EAAOK,IAAKJ,MAExB,sBAAKhB,UAAU,UAAf,UACE,qBAAKA,UAAU,SAAf,SAAyBgB,IACzB,sBAAKhB,UAAU,aAAf,cAA8BiB,KAC9B,qBAAKjB,UAAU,OAAf,SAAuBkB,eAVvBJ,MAmBd,OAAO,mCAAGL,KCKGY,EAzBQ,WACrB,IAAMlB,EAAWO,aAAY,SAACC,GAAD,OAAWA,KAClCW,EAAWC,cAEXC,EAAa,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,+EAEKC,IAAMC,IAAIH,GAFf,cAEZI,EAFY,gBAGCA,EAASC,KAHV,OAGZA,EAHY,OAIlBR,EAASpB,EAAY4B,IAJH,kDAMlBC,QAAQC,IAAI,UAAW,KAAMC,SANX,0DAAH,sDAenB,OANAC,qBAAU,WACRV,EAAc,uCAEb,IAEHO,QAAQC,IAAI7B,GAEV,qBAAKH,UAAU,oBAAf,SACE,cAAC,EAAD,OCiDSmC,EApEO,WACpB,IAAMb,EAAWC,cACTa,EAAcC,cAAdD,UACF7B,EAAUG,aAAY,SAACC,GAAD,OAAWA,EAAMJ,WACrCU,EAA+CV,EAA/CU,MAAOF,EAAwCR,EAAxCQ,MAAOG,EAAiCX,EAAjCW,SAAUoB,EAAuB/B,EAAvB+B,YAAatB,EAAUT,EAAVS,MAE7CkB,qBAAU,WAMR,OALIE,GAA2B,KAAdA,GACfG,EAAmB,qCAAD,OAAsCH,IAInD,WACLd,EHXsC,CAC1ClB,KAAMH,OGaH,CAACmC,IAEJ,IAAMG,EAAkB,uCAAG,WAAOC,GAAP,iBAAAd,EAAA,+EAELC,IAAMC,IAAIY,GAFL,cAEjBC,EAFiB,gBAGKA,EAAIX,KAHT,OAGjBY,EAHiB,OAIvBX,QAAQC,IAAI,kBAAmBU,GAE/BpB,EAAShB,EAAgBoC,IANF,kDAQvBX,QAAQC,IAAI,UAAW,KAAMC,SARN,0DAAH,sDAaxB,OAFAF,QAAQC,IAAI,YAAazB,GAGvB,qBAAKP,UAAU,oBAAf,SACmC,IAAhC2C,OAAOC,KAAKrC,GAASsC,OACpB,6CAEA,qBAAK7C,UAAU,yBAAf,SACE,sBAAKA,UAAU,8CAAf,UACE,qBAAKA,UAAU,sBAAf,iBACA,sBAAKA,UAAU,qBAAf,UACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,iBAAiBmB,IAAKJ,EAAOK,IAAKJ,MAEnD,sBAAKhB,UAAU,YAAf,UACE,6BAAKgB,IACL,6BACE,oBAAG8B,KAAK,IAAI9C,UAAU,oBAAtB,cACIiB,OAIN,oBAAIjB,UAAU,wBAAd,SAAuCkB,IACvC,4BAAIoB,IACJ,sBAAKtC,UAAU,8BAA8B+C,SAAS,IAAtD,UACE,qBAAK/C,UAAU,iBAAf,SACE,mBAAGA,UAAU,gBAEf,qBAAKA,UAAU,kBAAf,0CC1CHgD,MAnBf,WACE,OACE,qBAAKhD,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOiD,KAAK,eAAeC,OAAK,EAACC,UAAW9B,IAC5C,cAAC,IAAD,CACE6B,OAAK,EACLD,KAAK,iCACLE,UAAWhB,IAEb,cAAC,IAAD,qC,gBCVKiB,EALEC,YAAgB,CAC/BzC,YCF4B,WAAuC,IAAtCD,EAAqC,uDAA7B,CAAER,SAAU,IAAMmD,EAAW,uCAClE,OAAQA,EAAOlD,MACb,KAAKH,EACH,OAAO,2BACFU,GADL,IAEER,SAAUmD,EAAOjD,UAErB,QACE,OAAOM,IDLXJ,QCQkC,WAAyB,IAAxBI,EAAuB,uDAAf,GAAI2C,EAAW,uCAC1D,OAAQA,EAAOlD,MACb,KAAKH,EACH,OAAO,2BACFU,GACA2C,EAAOjD,SAEd,KAAKJ,EACH,MAAO,GACT,QACE,OAAOU,MCZE4C,EAFDC,YAAYJ,EAAU,ICHpCK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJK,SAASC,eAAe,W","file":"static/js/main.09aeb164.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Header = () => {\n  return (\n    <Link to=\"/Fake-Store/\">\n      <div className=\"ui fixed menu\">\n        <div className=\"ui container center\">\n          <Link to=\"/Fake-Store/\">\n            <h2>FakeShop</h2>\n          </Link>\n        </div>\n      </div>\n    </Link>\n  )\n}\nexport default Header\n","export const ActionTypes = {\n  SET_PRODUCTS: 'SET_PRODUCTS',\n  SELECT_PRODUCT: 'SELECT_PRODUCT',\n  REMOVE_SELECTED_PRODUCT: 'REMOVE_SELECTED_PRODUCT',\n}\n","import { ActionTypes } from '../constants/action-types'\n\nexport const setProducts = (products) => ({\n  type: ActionTypes.SET_PRODUCTS,\n  payload: products,\n})\n\nexport const selectedProduct = (product) => ({\n  type: ActionTypes.SELECT_PRODUCT,\n  payload: product,\n})\n\nexport const removeSelectedProduct = () => ({\n  type: ActionTypes.REMOVE_SELECTED_PRODUCT,\n})\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\n\nconst ProductComponent = () => {\n  const products = useSelector((state) => state.allproducts.products)\n  const renderList = products.map((product) => {\n    const { id, image, title, price, category } = product\n    return (\n      <div key={id} className=\"four wide column\">\n        <Link to={`/Fake-Store/product/${id}`}>\n          <div className=\"ui link cards\">\n            <div className=\"card\">\n              <div className=\"image\">\n                <img src={image} alt={title} />\n              </div>\n              <div className=\"content\">\n                <div className=\"header\">{title}</div>\n                <div className=\"meta price\">${price}</div>\n                <div className=\"meta\">{category}</div>\n              </div>\n            </div>\n          </div>\n        </Link>\n      </div>\n    )\n  })\n\n  return <>{renderList}</>\n}\n\nexport default ProductComponent\n","import React from 'react'\nimport { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport axios from 'axios'\nimport { setProducts } from '../redux/actions/productActions'\n\nimport ProductComponent from './ProductComponent'\n\nconst ProductListing = () => {\n  const products = useSelector((state) => state)\n  const dispatch = useDispatch()\n\n  const fetchProducts = async (api) => {\n    try {\n      const response = await axios.get(api)\n      const data = await response.data\n      dispatch(setProducts(data))\n    } catch (error) {\n      console.log('error: ', error.message)\n    }\n  }\n  useEffect(() => {\n    fetchProducts('https://fakestoreapi.com/products')\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  console.log(products)\n  return (\n    <div className=\"ui grid container\">\n      <ProductComponent />\n    </div>\n  )\n}\nexport default ProductListing\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useEffect } from 'react'\nimport { useParams } from 'react-router'\nimport axios from 'axios'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n  selectedProduct,\n  removeSelectedProduct,\n} from '../redux/actions/productActions'\n\nconst ProductDetail = () => {\n  const dispatch = useDispatch()\n  const { productId } = useParams()\n  const product = useSelector((state) => state.product)\n  const { price, image, category, description, title } = product\n\n  useEffect(() => {\n    if (productId && productId !== '') {\n      fetchProductDetail(`https://fakestoreapi.com/products/${productId}`)\n    }\n    //El return en useEffect sirve para hacer algo cuando desmontemos el componente\n    // o se actualice\n    return () => {\n      dispatch(removeSelectedProduct())\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [productId])\n\n  const fetchProductDetail = async (apiProduct) => {\n    try {\n      const res = await axios.get(apiProduct)\n      const productDetail = await res.data\n      console.log('productDetail: ', productDetail)\n\n      dispatch(selectedProduct(productDetail))\n    } catch (error) {\n      console.log('Error: ', error.message)\n    }\n  }\n  console.log('product: ', product)\n\n  return (\n    <div className=\"ui grid container\">\n      {Object.keys(product).length === 0 ? (\n        <div>...Loading</div>\n      ) : (\n        <div className=\"ui placeholder segment\">\n          <div className=\"ui two column stackable center aligned grid\">\n            <div className=\"ui vertical divider\">AND</div>\n            <div className=\"middle aligned row\">\n              <div className=\"column lp\">\n                <img className=\"ui fluid image\" src={image} alt={title} />\n              </div>\n              <div className=\"column rp\">\n                <h1>{title}</h1>\n                <h2>\n                  <a href=\"#\" className=\"ui teal tag label\">\n                    ${price}\n                  </a>\n                </h2>\n\n                <h3 className=\"ui brown block header\">{category}</h3>\n                <p>{description}</p>\n                <div className=\"ui vertical animated button\" tabIndex=\"0\">\n                  <div className=\"hidden content\">\n                    <i className=\"shop icon\"></i>\n                  </div>\n                  <div className=\"visible content\">Add to Cart</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default ProductDetail\n","import './App.css'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport Header from './containers/Header'\nimport ProductListing from './containers/ProductListing'\nimport ProductDetail from './containers/ProductDetail'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Header />\n        <Switch>\n          <Route path=\"/Fake-Store/\" exact component={ProductListing} />\n          <Route\n            exact\n            path=\"/Fake-Store/product/:productId\"\n            component={ProductDetail}\n          />\n          <Route>404 Not Found</Route>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  )\n}\n\nexport default App\n","import { combineReducers } from 'redux'\nimport { productReducer, selectProductReducer } from './productReducer'\n\nconst reducers = combineReducers({\n  allproducts: productReducer,\n  product: selectProductReducer,\n})\n\nexport default reducers\n","import { ActionTypes } from '../constants/action-types'\n\nexport const productReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case ActionTypes.SET_PRODUCTS:\n      return {\n        ...state,\n        products: action.payload,\n      }\n    default:\n      return state\n  }\n}\nexport const selectProductReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ActionTypes.SELECT_PRODUCT:\n      return {\n        ...state,\n        ...action.payload,\n      }\n    case ActionTypes.REMOVE_SELECTED_PRODUCT:\n      return {}\n    default:\n      return state\n  }\n}\n","import { createStore } from 'redux'\nimport reducers from './reducers/index'\n\n// const store = createStore(\n//   reducers,\n//   {},\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n// )\n\nconst store = createStore(reducers, {})\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport store from './redux/store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}